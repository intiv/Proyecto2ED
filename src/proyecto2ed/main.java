/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto2ed;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

public class main extends javax.swing.JFrame {

    BinaryTree arbol;
    LinkedList lista;

    public main() {
        initComponents();
        arbol = new BinaryTree();
        lista = new LinkedList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jdTree = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        taTree = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        bClose = new javax.swing.JButton();
        bLoad = new javax.swing.JButton();
        bExit = new javax.swing.JButton();
        bDraw = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        taTree.setEditable(false);
        taTree.setColumns(20);
        taTree.setRows(5);
        jScrollPane1.setViewportView(taTree);

        jLabel2.setText("Arbol");

        bClose.setText("Cerrar");
        bClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bCloseMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jdTreeLayout = new javax.swing.GroupLayout(jdTree.getContentPane());
        jdTree.getContentPane().setLayout(jdTreeLayout);
        jdTreeLayout.setHorizontalGroup(
            jdTreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdTreeLayout.createSequentialGroup()
                .addGroup(jdTreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jdTreeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jdTreeLayout.createSequentialGroup()
                        .addGroup(jdTreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jdTreeLayout.createSequentialGroup()
                                .addGap(298, 298, 298)
                                .addComponent(jLabel2))
                            .addGroup(jdTreeLayout.createSequentialGroup()
                                .addGap(297, 297, 297)
                                .addComponent(bClose)))
                        .addGap(0, 302, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jdTreeLayout.setVerticalGroup(
            jdTreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdTreeLayout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bClose)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bLoad.setText("Cargar Datos de txt");
        bLoad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bLoadMouseClicked(evt);
            }
        });

        bExit.setText("Salir");
        bExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bExitMouseClicked(evt);
            }
        });

        bDraw.setText("Dibujar Arbol");
        bDraw.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bDrawMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Calligraphy", 3, 24)); // NOI18N
        jLabel1.setText("Organigrama a Arbol");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 46, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(bDraw, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(bLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(bExit, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addComponent(bLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bDraw, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(bExit, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bLoadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bLoadMouseClicked
        try {
            String dir = System.getProperty("user.home");
            JFileChooser chooser = new JFileChooser(dir + "/Desktop");
            FileFilter filter = new FileNameExtensionFilter(null, "txt");
            chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            chooser.setFileFilter(filter);
            chooser.setAcceptAllFileFilterUsed(false);
            if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                if (chooser.getSelectedFile().getName().endsWith(".txt")) {
                    File archivo = chooser.getSelectedFile();
                    FileReader in = new FileReader(archivo);
                    BufferedReader reader = new BufferedReader(in);
                    String line;
                    TreeNode root = null;
                    while ((line = reader.readLine()) != null) {
                        int cont = 0;
                        while (line.charAt(cont) == '\t') {
                            cont++;
                        }
                        if (cont == 0) {
                            root = new TreeNode(line.substring(cont, line.length()), cont);
                        } else {
                            lista.insert(new TreeNode(line.substring(cont, line.length()), cont), lista.length());
                        }
                    }
                    create(root, lista);
                    arbol.insert(root);
                    for (int i = 0; i < lista.length(); i++) {
                        arbol.insert(lista.get(i));
                    }
                    reader.close();
                    in.close();
                    JOptionPane.showMessageDialog(this, "Los datos se cargan con exito al arbol!");
                } else {
                    JOptionPane.showMessageDialog(this, "Archivo invalido!");
                }
            }
        } catch (IOException | NullPointerException E) {
            JOptionPane.showMessageDialog(this, "OcurriÃ³ un error al cargar los datos");
        }
    }//GEN-LAST:event_bLoadMouseClicked

    private void bDrawMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bDrawMouseClicked
        if (arbol.getRoot() != null) {
            jdTree.setModal(true);
            jdTree.setLocationRelativeTo(this);
            jdTree.pack();
            taTree.setText("");
            arbol.print(arbol.getRoot(), taTree);
            jdTree.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Debe cargar datos validos de un archivo de texto para poder dibujar el arbol!");
        }
    }//GEN-LAST:event_bDrawMouseClicked

    private void bCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bCloseMouseClicked
        taTree.setText("");
        jdTree.setModal(false);
        jdTree.dispose();
    }//GEN-LAST:event_bCloseMouseClicked

    private void bExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bExitMouseClicked
        arbol=null;
        lista=null;
        System.exit(0);
    }//GEN-LAST:event_bExitMouseClicked

    public void create(TreeNode principal, LinkedList hijos) {
        LinkedList tmp = new LinkedList();

        for (int i = 0; i < hijos.length(); i++) {
            int dif = hijos.get(i).getTabs() - principal.getTabs();
            if (dif == 1) {
                hijos.get(i).setFather(principal);
                //System.out.println(hijos.get(i).getData()+", Padre: "+hijos.get(i).getFather().getData());
            } else {
                TreeNode nP = null;
                for (int j = 0; j < i; j++) {
                    if (hijos.get(i).getTabs() - hijos.get(j).getTabs() == 1) {
                        nP = hijos.get(j);
                    }
                }
                if (nP != null && hijos.get(i).getFather() == null) {
                    hijos.get(i).setFather(hijos.get(hijos.indexOf(nP)));
                }
            }
        }

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bClose;
    private javax.swing.JButton bDraw;
    private javax.swing.JButton bExit;
    private javax.swing.JButton bLoad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JDialog jdTree;
    private javax.swing.JTextArea taTree;
    // End of variables declaration//GEN-END:variables
}
