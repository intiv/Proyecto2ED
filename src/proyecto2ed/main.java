/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto2ed;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author USUARIO-PC
 */
public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    BinaryTree arbol;
    LinkedList lista;

    public main() {
        initComponents();
        arbol = new BinaryTree();
        lista = new LinkedList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bLoad = new javax.swing.JButton();
        bExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bLoad.setText("Cargar Datos");
        bLoad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bLoadMouseClicked(evt);
            }
        });

        bExit.setText("Salir");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(254, 254, 254)
                        .addComponent(bLoad))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(275, 275, 275)
                        .addComponent(bExit)))
                .addContainerGap(272, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(bLoad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                .addComponent(bExit)
                .addGap(55, 55, 55))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bLoadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bLoadMouseClicked
        try {
            JFileChooser chooser = new JFileChooser();
            FileFilter filter = new FileNameExtensionFilter(null, "txt");
            chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            chooser.setFileFilter(filter);
            chooser.setAcceptAllFileFilterUsed(false);
            if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                if (chooser.getSelectedFile().getName().endsWith(".txt")) {
                    File archivo = chooser.getSelectedFile();
                    FileReader in = new FileReader(archivo);
                    BufferedReader reader = new BufferedReader(in);
                    String line;
                    TreeNode root = null;
                    while ((line = reader.readLine()) != null) {
                        int cont = 0;
                        while (line.charAt(cont) == '\t') {
                            cont++;
                        }
                        if (cont == 1) {
                            root = new TreeNode(line.substring(cont, line.length()), cont);
                        } else {
                            lista.insert(new TreeNode(line.substring(cont, line.length()), cont), lista.length());
                        }

                        /*if(cont==1){
                            lista.insert(novo,cont, 0);
                        }else if(cont==2){
                            novo.setFather(lista.get(0));
                            principal=novo;
                            lista.insert(novo,cont, 1);
                        }
                        System.out.println(cont+" tabs");
                        System.out.println("----------------------------------");*/
                    }

                    create(root, lista);
                    
                    arbol.insert(root);
                    for (int i = 0; i < lista.length(); i++) {
                        arbol.insert(lista.get(i));
                    }
                    for (int k = 0; k < lista.length(); k++) {
                        System.out.println("k=" + k + ", " + lista.get(k).getData() + " - Padre: " + lista.get(k).getFather().getData());
                    }
                    arbol.print(root);
                } else {
                    JOptionPane.showMessageDialog(this, "Archivo invalido!");
                }
            }
        } catch (IOException | NullPointerException E) {
            JOptionPane.showMessageDialog(this, "OcurriÃ³ un error al cargar los datos");
        }
    }//GEN-LAST:event_bLoadMouseClicked

    public void create(TreeNode principal, LinkedList hijos) {
        LinkedList tmp = new LinkedList();

        for (int i = 0; i < hijos.length(); i++) {
            int dif = hijos.get(i).getTabs() - principal.getTabs();
            if (dif == 1) {
                hijos.get(i).setFather(principal);
                //System.out.println(hijos.get(i).getData()+", Padre: "+hijos.get(i).getFather().getData());
            } else {
                TreeNode nP = null;
                for (int j = 0; j < i; j++) {
                    if (hijos.get(i).getTabs() - hijos.get(j).getTabs() == 1) {
                        nP = hijos.get(j);
                    }
                }
                if (nP != null && hijos.get(i).getFather() == null) {
                    System.out.print(i + ", NP:" + nP.getData() + "\t");
                    hijos.get(i).setFather(hijos.get(hijos.indexOf(nP)));
                    System.out.println(i + "," + hijos.get(i).getData() + ", Padre: " + hijos.get(i).getFather().getData());
                }

            }

            //System.out.println("---------------------------------");
        }
        System.out.println("----------------------------------------");

        //if(tmp.length()>0)
        //create(nP,tmp);
        /*else if(dif!=0){
                TreeNode nP=hijos.get(i);
                boolean sons=false;
                LinkedList tmp=new LinkedList();
                int nCont=i;
                while(!sons){
                    if(hijos.get(nCont).getTabs()-nP.getTabs()==1)
                        tmp.insert(hijos.get(nCont), tmp.length());
                    else
                        sons=true;
                }
                
            }*/
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bExit;
    private javax.swing.JButton bLoad;
    // End of variables declaration//GEN-END:variables
}
